AWSTemplateFormatVersion: 2010-09-09
Description: Identity-MultiAccountRoles Template.
  This creates Multi-Account IAM Roles. These are not Application specific - Roles created here are for Multi-Account Access.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - MultiAccountManagedPoliciesStackName
      - Label:
          default: Account Dependencies
        Parameters:
          - OrganizationAccount
          - JumpstartAccount
          - ManagementAccount
          - IdentityAccount
          - LogAccount
          - RecoveryAccount
          - BuildAccount
          - CoreAccount
          - ProductionAccount
          - StagingAccount
          - UATAccount
          - QAAccount
          - TestingAccount
          - DevelopmentAccount
    ParameterLabels:
      MultiAccountManagedPoliciesStackName:
        default: Multi-Account ManagedPolicies Stack Name
      OrganizationAccount:
        default: Organization Account
      JumpstartAccount:
        default: Jumpstart Account
      ManagementAccount:
        default: Management Account
      IdentityAccount:
        default: Identity Account
      LogAccount:
        default: Log Account
      RecoveryAccount:
        default: Recovery Account
      BuildAccount:
        default: Build Account
      CoreAccount:
        default: Core Account
      ProductionAccount:
        default: Production Account
      StagingAccount:
        default: Staging Account
      UATAccount:
        default: UAT Account
      QAAccount:
        default: QA Account
      TestingAccount:
        default: Testing Account
      DevelopmentAccount:
        default: Development Account
Parameters:
  MultiAccountManagedPoliciesStackName:
    Description: Name of the CloudFormation Stack containing Multi-Account ManagedPolicies
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: MultiAccountManagedPolicies
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  OrganizationAccount:
    Description: AWS Account ID of the Organization Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  JumpstartAccount:
    Description: AWS Account ID of the Jumpstart Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  ManagementAccount:
    Description: AWS Account ID of the Management Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  IdentityAccount:
    Description: AWS Account ID of the Identity Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  LogAccount:
    Description: AWS Account ID of the Log Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  RecoveryAccount:
    Description: AWS Account ID of the Recovery Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  BuildAccount:
    Description: AWS Account ID of the Build Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  CoreAccount:
    Description: AWS Account ID of the Core Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  ProductionAccount:
    Description: AWS Account ID of the Production Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  StagingAccount:
    Description: AWS Account ID of the Staging Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  UATAccount:
    Description: AWS Account ID of the UAT Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  QAAccount:
    Description: AWS Account ID of the QA Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  TestingAccount:
    Description: AWS Account ID of the Testing Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
  DevelopmentAccount:
    Description: AWS Account ID of the Development Account
    Type: String
    Default: ''
    AllowedPattern: (^$|^[0-9]{12}$)
    ConstraintDescription: must be a valid AWS Account ID, or blank.
Rules:
  ValidateRegion:
    Assertions:
      - Assert: !Equals [ !Ref 'AWS::Region', us-east-1 ]
        AssertDescription: This Template can only be used in Region us-east-1.
Conditions:
  ConfigureOrganizationRoles: !Equals [ !Ref OrganizationAccount, !Ref 'AWS::AccountId' ]
  ConfigureOrganizationAccount: !Not [ !Equals [ !Ref OrganizationAccount, '' ]]
  ConfigureJumpstartRoles: !Equals [ !Ref JumpstartAccount, !Ref 'AWS::AccountId' ]
  ConfigureJumpstartAccount: !Not [ !Equals [ !Ref JumpstartAccount, '' ]]
  ConfigureManagementRoles: !Equals [ !Ref ManagementAccount, !Ref 'AWS::AccountId' ]
  ConfigureManagementAccount: !Not [ !Equals [ !Ref ManagementAccount, '' ]]
  ConfigureManagementDomainRoles: !And [ !Condition ConfigureManagementRoles, !Not [ !Condition ConfigureOrganizationAccount ]]
  ConfigureIdentityRoles: !Equals [ !Ref IdentityAccount, !Ref 'AWS::AccountId' ]
  ConfigureIdentityAccount: !Not [ !Equals [ !Ref IdentityAccount, '' ]]
  ConfigureLogRoles: !Equals [ !Ref LogAccount, !Ref 'AWS::AccountId' ]
  ConfigureLogAccount: !Not [ !Equals [ !Ref LogAccount, '' ]]
  ConfigureRecoveryRoles: !Equals [ !Ref RecoveryAccount, !Ref 'AWS::AccountId' ]
  ConfigureRecoveryAccount: !Not [ !Equals [ !Ref RecoveryAccount, '' ]]
  ConfigureBuildRoles: !Equals [ !Ref BuildAccount, !Ref 'AWS::AccountId' ]
  ConfigureBuildAccount: !Not [ !Equals [ !Ref BuildAccount, '' ]]
  ConfigureCoreRoles: !Equals [ !Ref CoreAccount, !Ref 'AWS::AccountId' ]
  ConfigureCoreAccount: !Not [ !Equals [ !Ref CoreAccount, '' ]]
  ConfigureProductionRoles: !Equals [ !Ref ProductionAccount, !Ref 'AWS::AccountId' ]
  ConfigureProductionAccount: !Not [ !Equals [ !Ref ProductionAccount, '' ]]
  ConfigureStagingRoles: !Equals [ !Ref StagingAccount, !Ref 'AWS::AccountId' ]
  ConfigureStagingAccount: !Not [ !Equals [ !Ref StagingAccount, '' ]]
  ConfigureUATRoles: !Equals [ !Ref UATAccount, !Ref 'AWS::AccountId' ]
  ConfigureUATAccount: !Not [ !Equals [ !Ref UATAccount, '' ]]
  ConfigureQARoles: !Equals [ !Ref QAAccount, !Ref 'AWS::AccountId' ]
  ConfigureQAAccount: !Not [ !Equals [ !Ref QAAccount, '' ]]
  ConfigureTestingRoles: !Equals [ !Ref TestingAccount, !Ref 'AWS::AccountId' ]
  ConfigureTestingAccount: !Not [ !Equals [ !Ref TestingAccount, '' ]]
  ConfigureDevelopmentRoles: !Equals [ !Ref DevelopmentAccount, !Ref 'AWS::AccountId' ]
  ConfigureDevelopmentAccount: !Not [ !Equals [ !Ref DevelopmentAccount, '' ]]
Resources:
  OrganizationAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureOrganizationRoles
  OrganizationAccountHostedZoneDelegationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountHostedZoneDelegationRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureJumpstartAccount
                    - !Sub arn:aws:iam::${JumpstartAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountHostedZoneDelegationAccess
    Condition: ConfigureOrganizationRoles
  OrganizationAccountDomainNameServersRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountDomainNameServersRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureJumpstartAccount
                    - !Sub arn:aws:iam::${JumpstartAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountDomainNameServersAccess
    Condition: ConfigureOrganizationRoles
  JumpstartAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureJumpstartRoles
  ManagementAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureManagementRoles
  ManagementAccountHostedZoneDelegationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountHostedZoneDelegationRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureJumpstartAccount
                    - !Sub arn:aws:iam::${JumpstartAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountHostedZoneDelegationAccess
    Condition: ConfigureManagementDomainRoles
  ManagementAccountDomainNameServersRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountDomainNameServersRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureJumpstartAccount
                    - !Sub arn:aws:iam::${JumpstartAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountDomainNameServersAccess
    Condition: ConfigureManagementDomainRoles
  IdentityAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureStagingAccount
                    - !Sub arn:aws:iam::${StagingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureUATAccount
                    - !Sub arn:aws:iam::${UATAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureQAAccount
                    - !Sub arn:aws:iam::${QAAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureTestingAccount
                    - !Sub arn:aws:iam::${TestingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureDevelopmentAccount
                    - !Sub arn:aws:iam::${DevelopmentAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureIdentityRoles
  LogAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureStagingAccount
                    - !Sub arn:aws:iam::${StagingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureUATAccount
                    - !Sub arn:aws:iam::${UATAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureQAAccount
                    - !Sub arn:aws:iam::${QAAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureTestingAccount
                    - !Sub arn:aws:iam::${TestingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureDevelopmentAccount
                    - !Sub arn:aws:iam::${DevelopmentAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureLogRoles
  RecoveryAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureStagingAccount
                    - !Sub arn:aws:iam::${StagingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureUATAccount
                    - !Sub arn:aws:iam::${UATAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureQAAccount
                    - !Sub arn:aws:iam::${QAAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureTestingAccount
                    - !Sub arn:aws:iam::${TestingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureDevelopmentAccount
                    - !Sub arn:aws:iam::${DevelopmentAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureRecoveryRoles
  BuildAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureStagingAccount
                    - !Sub arn:aws:iam::${StagingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureUATAccount
                    - !Sub arn:aws:iam::${UATAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureQAAccount
                    - !Sub arn:aws:iam::${QAAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureTestingAccount
                    - !Sub arn:aws:iam::${TestingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureDevelopmentAccount
                    - !Sub arn:aws:iam::${DevelopmentAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureBuildRoles
  CoreAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureStagingAccount
                    - !Sub arn:aws:iam::${StagingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureUATAccount
                    - !Sub arn:aws:iam::${UATAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureQAAccount
                    - !Sub arn:aws:iam::${QAAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureTestingAccount
                    - !Sub arn:aws:iam::${TestingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureDevelopmentAccount
                    - !Sub arn:aws:iam::${DevelopmentAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureCoreRoles
  CoreAccountVPCPeeringConnectionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountVPCPeeringConnectionRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureStagingAccount
                    - !Sub arn:aws:iam::${StagingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureUATAccount
                    - !Sub arn:aws:iam::${UATAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureQAAccount
                    - !Sub arn:aws:iam::${QAAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureTestingAccount
                    - !Sub arn:aws:iam::${TestingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureDevelopmentAccount
                    - !Sub arn:aws:iam::${DevelopmentAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountVPCPeeringConnectionAccess
    Condition: ConfigureCoreRoles
  ProductionAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureProductionRoles
  ProductionAccountHostedZoneDelegationRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountHostedZoneDelegationRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureProductionAccount
                    - !Sub arn:aws:iam::${ProductionAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureStagingAccount
                    - !Sub arn:aws:iam::${StagingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureUATAccount
                    - !Sub arn:aws:iam::${UATAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureQAAccount
                    - !Sub arn:aws:iam::${QAAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureTestingAccount
                    - !Sub arn:aws:iam::${TestingAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureDevelopmentAccount
                    - !Sub arn:aws:iam::${DevelopmentAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountHostedZoneDelegationAccess
    Condition: ConfigureProductionRoles
  StagingAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureStagingAccount
                    - !Sub arn:aws:iam::${StagingAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureStagingRoles
  UATAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureUATAccount
                    - !Sub arn:aws:iam::${UATAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureUATRoles
  QAAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureQAAccount
                    - !Sub arn:aws:iam::${QAAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureQARoles
  TestingAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureTestingAccount
                    - !Sub arn:aws:iam::${TestingAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureTestingRoles
  DevelopmentAccountReadOnlyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CrossAccountReadOnlyRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !If
                    - ConfigureOrganizationAccount
                    - !Sub arn:aws:iam::${OrganizationAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureManagementAccount
                    - !Sub arn:aws:iam::${ManagementAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureIdentityAccount
                    - !Sub arn:aws:iam::${IdentityAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureLogAccount
                    - !Sub arn:aws:iam::${LogAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureRecoveryAccount
                    - !Sub arn:aws:iam::${RecoveryAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureBuildAccount
                    - !Sub arn:aws:iam::${BuildAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureCoreAccount
                    - !Sub arn:aws:iam::${CoreAccount}:root
                    - !Ref AWS::NoValue
                - !If
                    - ConfigureDevelopmentAccount
                    - !Sub arn:aws:iam::${DevelopmentAccount}:root
                    - !Ref AWS::NoValue
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - !ImportValue
          Fn::Sub: ${MultiAccountManagedPoliciesStackName}-CrossAccountReadOnlyAccess
    Condition: ConfigureDevelopmentRoles
Outputs:
  OrganizationAccountReadOnlyRole:
    Description: The OrganizationAccountReadOnlyRole Name
    Value: !Ref OrganizationAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-OrganizationAccountReadOnlyRole
    Condition: ConfigureOrganizationRoles
  OrganizationAccountHostedZoneDelegationRole:
    Description: The OrganizationAccountHostedZoneDelegationRole Name
    Value: !Ref OrganizationAccountHostedZoneDelegationRole
    Export:
      Name: !Sub ${AWS::StackName}-OrganizationAccountHostedZoneDelegationRole
    Condition: ConfigureOrganizationRoles
  OrganizationAccountDomainNameServersRole:
    Description: The OrganizationAccountDomainNameServersRole Name
    Value: !Ref OrganizationAccountDomainNameServersRole
    Export:
      Name: !Sub ${AWS::StackName}-OrganizationAccountDomainNameServersRole
    Condition: ConfigureOrganizationRoles
  JumpstartAccountReadOnlyRole:
    Description: The JumpstartAccountReadOnlyRole Name
    Value: !Ref JumpstartAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-JumpstartAccountReadOnlyRole
    Condition: ConfigureJumpstartRoles
  ManagementAccountReadOnlyRole:
    Description: The ManagementAccountReadOnlyRole Name
    Value: !Ref ManagementAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-ManagementAccountReadOnlyRole
    Condition: ConfigureManagementRoles
  ManagementAccountHostedZoneDelegationRole:
    Description: The ManagementAccountHostedZoneDelegationRole Name
    Value: !Ref ManagementAccountHostedZoneDelegationRole
    Export:
      Name: !Sub ${AWS::StackName}-ManagementAccountHostedZoneDelegationRole
    Condition: ConfigureManagementDomainRoles
  ManagementAccountDomainNameServersRole:
    Description: The ManagementAccountDomainNameServersRole Name
    Value: !Ref ManagementAccountDomainNameServersRole
    Export:
      Name: !Sub ${AWS::StackName}-ManagementAccountDomainNameServersRole
    Condition: ConfigureManagementDomainRoles
  IdentityAccountReadOnlyRole:
    Description: The IdentityAccountReadOnlyRole Name
    Value: !Ref IdentityAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-IdentityAccountReadOnlyRole
    Condition: ConfigureIdentityRoles
  LogAccountReadOnlyRole:
    Description: The LogAccountReadOnlyRole Name
    Value: !Ref LogAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-LogAccountReadOnlyRole
    Condition: ConfigureLogRoles
  RecoveryAccountReadOnlyRole:
    Description: The RecoveryAccountReadOnlyRole Name
    Value: !Ref RecoveryAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-RecoveryAccountReadOnlyRole
    Condition: ConfigureRecoveryRoles
  BuildAccountReadOnlyRole:
    Description: The BuildAccountReadOnlyRole Name
    Value: !Ref BuildAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-BuildAccountReadOnlyRole
    Condition: ConfigureBuildRoles
  CoreAccountReadOnlyRole:
    Description: The CoreAccountReadOnlyRole Name
    Value: !Ref CoreAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-CoreAccountReadOnlyRole
    Condition: ConfigureCoreRoles
  CoreAccountVPCPeeringConnectionRole:
    Description: The CoreAccountVPCPeeringConnectionRole Name
    Value: !Ref CoreAccountVPCPeeringConnectionRole
    Export:
      Name: !Sub ${AWS::StackName}-CoreAccountVPCPeeringConnectionRole
    Condition: ConfigureCoreRoles
  ProductionAccountReadOnlyRole:
    Description: The ProductionAccountReadOnlyRole Name
    Value: !Ref ProductionAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-ProductionAccountReadOnlyRole
    Condition: ConfigureProductionRoles
  ProductionAccountHostedZoneDelegationRole:
    Description: The ProductionAccountHostedZoneDelegationRole Name
    Value: !Ref ProductionAccountHostedZoneDelegationRole
    Export:
      Name: !Sub ${AWS::StackName}-ProductionAccountHostedZoneDelegationRole
    Condition: ConfigureProductionRoles
  StagingAccountReadOnlyRole:
    Description: The StagingAccountReadOnlyRole Name
    Value: !Ref StagingAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-StagingAccountReadOnlyRole
    Condition: ConfigureStagingRoles
  UATAccountReadOnlyRole:
    Description: The UATAccountReadOnlyRole Name
    Value: !Ref UATAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-UATAccountReadOnlyRole
    Condition: ConfigureUATRoles
  QAAccountReadOnlyRole:
    Description: The QAAccountReadOnlyRole Name
    Value: !Ref QAAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-QAAccountReadOnlyRole
    Condition: ConfigureQARoles
  TestingAccountReadOnlyRole:
    Description: The TestingAccountReadOnlyRole Name
    Value: !Ref TestingAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-TestingAccountReadOnlyRole
    Condition: ConfigureTestingRoles
  DevelopmentAccountReadOnlyRole:
    Description: The DevelopmentAccountReadOnlyRole Name
    Value: !Ref DevelopmentAccountReadOnlyRole
    Export:
      Name: !Sub ${AWS::StackName}-DevelopmentAccountReadOnlyRole
    Condition: ConfigureDevelopmentRoles
