AWSTemplateFormatVersion: 2010-09-09
Description: Common-Subscriptions Template.
  This creates Subscriptions to SNS Topics.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - TopicsStackName
      - Label:
          default: Subscription Configuration
        Parameters:
          - EventsTopicEmailEndpoint
          - UrgentEventsTopicEmailEndpoint
          - UrgentEventsTopicPhoneEndpoint
          - AlarmsTopicEmailEndpoint
          - UrgentAlarmsTopicEmailEndpoint
          - UrgentAlarmsTopicPhoneEndpoint
    ParameterLabels:
      TopicsStackName:
        default: Topics Stack Name
      EventsTopicEmailEndpoint:
        default: Events Topic Email Endpoint
      UrgentEventsTopicEmailEndpoint:
        default: UrgentEvents Topic Email Endpoint
      UrgentEventsTopicPhoneEndpoint:
        default: UrgentEvents Topic Phone Endpoint
      AlarmsTopicEmailEndpoint:
        default: Alarms Topic Email Endpoint
      UrgentAlarmsTopicEmailEndpoint:
        default: UrgentAlarms Topic Email Endpoint
      UrgentAlarmsTopicPhoneEndpoint:
        default: UrgentAlarms Topic Phone Endpoint
Parameters:
  TopicsStackName:
    Description: Name of the CloudFormation Stack containing Topics
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Topics
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  EventsTopicEmailEndpoint:
    Description: Email Endpoint for Events Topic. If blank, no standard subscription will be created
    Type: String
    Default: ''
    AllowedPattern: (^$|[^\s@]+@[^\s@]+\.[^\s@]+$)
    ConstraintDescription: must be a valid email address.
  UrgentEventsTopicEmailEndpoint:
    Description: Email Endpoint for UrgentEvents Topic. If blank, no standard subscription will be created
    Type: String
    Default: ''
    AllowedPattern: (^$|[^\s@]+@[^\s@]+\.[^\s@]+$)
    ConstraintDescription: must be a valid email address.
  UrgentEventsTopicPhoneEndpoint:
    Description: Phone Endpoint for UrgentEvents Topics. If blank, no standard subscription will be created
    Type: String
    Default: ''
    AllowedPattern: (^$|^\+\d{11,12}$)
    ConstraintDescription: must be a valid phone number.
  AlarmsTopicEmailEndpoint:
    Description: Email Endpoint for Alarms Topic. If blank, no standard subscription will be created
    Type: String
    Default: ''
    AllowedPattern: (^$|[^\s@]+@[^\s@]+\.[^\s@]+$)
    ConstraintDescription: must be a valid email address.
  UrgentAlarmsTopicEmailEndpoint:
    Description: Email Endpoint for UrgentAlarms Topic. If blank, no standard subscription will be created
    Type: String
    Default: ''
    AllowedPattern: (^$|[^\s@]+@[^\s@]+\.[^\s@]+$)
    ConstraintDescription: must be a valid email address.
  UrgentAlarmsTopicPhoneEndpoint:
    Description: Phone Endpoint for UrgentAlarms Topics. If blank, no standard subscription will be created
    Type: String
    Default: ''
    AllowedPattern: (^$|^\+\d{11,12}$)
    ConstraintDescription: must be a valid phone number.
Conditions:
  UseSMS: !Or [ !Equals [ !Ref 'AWS::Region', us-east-1 ],
                !Equals [ !Ref 'AWS::Region', us-west-2 ],
                !Equals [ !Ref 'AWS::Region', eu-west-1 ],
                !Equals [ !Ref 'AWS::Region', ap-northeast-1 ],
                !Equals [ !Ref 'AWS::Region', ap-southeast-1 ],
                !Equals [ !Ref 'AWS::Region', ap-southeast-2 ]]
  ConfigureEventsTopicEmailSubscription: !Not [ !Equals [ !Ref EventsTopicEmailEndpoint, '' ]]
  ConfigureUrgentEventsTopicEmailSubscription: !Not [ !Equals [ !Ref UrgentEventsTopicEmailEndpoint, '' ]]
  ConfigureUrgentEventsTopicPhoneSubscription: !And [ !Condition UseSMS, !Not [ !Equals [ !Ref UrgentEventsTopicPhoneEndpoint, '' ]]]
  ConfigureAlarmsTopicEmailSubscription: !Not [ !Equals [ !Ref AlarmsTopicEmailEndpoint, '' ]]
  ConfigureUrgentAlarmsTopicEmailSubscription: !Not [ !Equals [ !Ref UrgentAlarmsTopicEmailEndpoint, '' ]]
  ConfigureUrgentAlarmsTopicPhoneSubscription: !And [ !Condition UseSMS, !Not [ !Equals [ !Ref UrgentAlarmsTopicPhoneEndpoint, '' ]]]
Resources:
  EventsTopicEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !ImportValue
        Fn::Sub: ${TopicsStackName}-EventsTopic
      Protocol: email
      Endpoint: !Ref EventsTopicEmailEndpoint
    Condition: ConfigureEventsTopicEmailSubscription
  UrgentEventsTopicEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !ImportValue
        Fn::Sub: ${TopicsStackName}-UrgentEventsTopic
      Protocol: email
      Endpoint: !Ref UrgentEventsTopicEmailEndpoint
    Condition: ConfigureUrgentEventsTopicEmailSubscription
  UrgentEventsTopicPhoneSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !ImportValue
        Fn::Sub: ${TopicsStackName}-UrgentEventsTopic
      Protocol: sms
      Endpoint: !Ref UrgentEventsTopicPhoneEndpoint
    Condition: ConfigureUrgentEventsTopicPhoneSubscription
  AlarmsTopicEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !ImportValue
        Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Protocol: email
      Endpoint: !Ref AlarmsTopicEmailEndpoint
    Condition: ConfigureAlarmsTopicEmailSubscription
  UrgentAlarmsTopicEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !ImportValue
        Fn::Sub: ${TopicsStackName}-UrgentAlarmsTopic
      Protocol: email
      Endpoint: !Ref UrgentAlarmsTopicEmailEndpoint
    Condition: ConfigureAlarmsTopicEmailSubscription
  UrgentAlarmsTopicPhoneSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !ImportValue
        Fn::Sub: ${TopicsStackName}-UrgentAlarmsTopic
      Protocol: sms
      Endpoint: !Ref UrgentAlarmsTopicPhoneEndpoint
    Condition: ConfigureUrgentAlarmsTopicPhoneSubscription
