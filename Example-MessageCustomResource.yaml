AWSTemplateFormatVersion: 2010-09-09
Description: Example-MessageCustomResource Template.
  This demonstrates how to use the Message Lambda Function to send a Message from within a Stack.
  Currently, only the Messages sent to the UrgentMessages Topic Phone Subscription is received, due to the fact we create the Email Subscriptions in this
  same stack, so when the Messages are sent, Email Subscriptions will not have been confirmed, so any Messages sent are not queued, but are not sent.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - BaselineStackName
      - Label:
          default: Topic Configuration
        Parameters:
          - TopicPrefix
      - Label:
          default: Subscription Configuration
        Parameters:
          - MessagesTopicEmailEndpoint
          - UrgentMessagesTopicEmailEndpoint
          - UrgentMessagesTopicPhoneEndpoint
      - Label:
          default: Message Configuration
        Parameters:
          - MessageSubject
          - MessageBody
    ParameterLabels:
      BaselineStackName:
        default: Baseline Stack Name
      TopicPrefix:
        default: Topic Prefix
      MessagesTopicEmailEndpoint:
        default: Messages Topic Email Endpoint
      UrgentMessagesTopicEmailEndpoint:
        default: UrgentMessages Topic Email Endpoint
      UrgentMessagesTopicPhoneEndpoint:
        default: UrgentMessages Topic Phone Endpoint
      MessageSubject:
        default: Message Subject
      MessageBody:
        default: Message Body
Parameters:
  BaselineStackName:
    Description: Name of the CloudFormation Stack containing the Baseline Resources
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Baseline
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  TopicPrefix:
    Description: Optional Prefix for Topic Display Name
    Type: String
    Default: DAPJ
    AllowedPattern: (^&|^[A-Z][A-Z0-9]{1,4}$)
    ConstraintDescription: must begin with an upper-case letter and consist of 1 to 4 additional upper-case letters or digits, if specified.
  MessagesTopicEmailEndpoint:
    Description: Email Endpoint for Messages Topic. If blank, no standard subscription will be created
    Type: String
    Default: ''
    AllowedPattern: (^$|[^\s@]+@[^\s@]+\.[^\s@]+$)
    ConstraintDescription: must be a valid email address.
  UrgentMessagesTopicEmailEndpoint:
    Description: Email Endpoint for UrgentMessages Topic. If blank, no standard subscription will be created
    Type: String
    Default: ''
    AllowedPattern: (^$|[^\s@]+@[^\s@]+\.[^\s@]+$)
    ConstraintDescription: must be a valid email address.
  UrgentMessagesTopicPhoneEndpoint:
    Description: Phone Endpoint for UrgentMessages Topics. If blank, no standard subscription will be created
    Type: String
    Default: ''
    AllowedPattern: (^$|^\+\d{11,12}$)
    ConstraintDescription: must be a valid phone number.
  MessageSubject:
    Description: Message Subject. If blank, no subject will be used for the Message
    Type: String
    MaxLength: 120
    Default: ''
    ConstraintDescription: must be a valid subject, under 120 characters.
  MessageBody:
    Description: MessageBody
    Type: String
    Default: ''
    ConstraintDescription: must be a string.
Conditions:
  ConfigureTopicPrefix: !Not [ !Equals [ !Ref TopicPrefix, '' ]]
  UseSMS: !Or [ !Equals [ !Ref 'AWS::Region', us-east-1 ],
                !Equals [ !Ref 'AWS::Region', us-west-2 ],
                !Equals [ !Ref 'AWS::Region', eu-west-1 ],
                !Equals [ !Ref 'AWS::Region', ap-northeast-1 ],
                !Equals [ !Ref 'AWS::Region', ap-southeast-1 ],
                !Equals [ !Ref 'AWS::Region', ap-southeast-2 ]]
  ConfigureMessagesTopicEmailSubscription: !Not [ !Equals [ !Ref MessagesTopicEmailEndpoint, '' ]]
  ConfigureUrgentMessagesTopicEmailSubscription: !Not [ !Equals [ !Ref UrgentMessagesTopicEmailEndpoint, '' ]]
  ConfigureUrgentMessagesTopicPhoneSubscription: !And [ !Condition UseSMS, !Not [ !Equals [ !Ref UrgentMessagesTopicPhoneEndpoint, '' ]]]
Resources:
  MessagesTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: Messages
      DisplayName: !If
        - ConfigureTopicPrefix
        - !Sub ${TopicPrefix} Messages
        - Messages
  UrgentMessagesTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: UrgentMessages
      DisplayName: !If
        - ConfigureTopicPrefix
        - !Sub ${TopicPrefix} Messages
        - Messages
  MessagesTopicEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref MessagesTopic
      Protocol: email
      Endpoint: !Ref MessagesTopicEmailEndpoint
    Condition: ConfigureMessagesTopicEmailSubscription
  UrgentMessagesTopicEmailSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref UrgentMessagesTopic
      Protocol: email
      Endpoint: !Ref UrgentMessagesTopicEmailEndpoint
    Condition: ConfigureUrgentMessagesTopicEmailSubscription
  UrgentMessagesTopicPhoneSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref UrgentMessagesTopic
      Protocol: sms
      Endpoint: !Ref UrgentMessagesTopicPhoneEndpoint
    Condition: ConfigureUrgentMessagesTopicPhoneSubscription
  ShortMessage:
    Type: Custom::Message
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${BaselineStackName}-MessageFunctionArn
      TopicArn: !Ref MessagesTopic
      Message: !Ref MessageBody
  LongMessage:
    Type: Custom::Message
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${BaselineStackName}-MessageFunctionArn
      TopicArn: !Ref MessagesTopic
      Subject: !Ref MessageSubject
      Message: !Ref MessageBody
  ShortUrgentMessage:
    Type: Custom::Message
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${BaselineStackName}-MessageFunctionArn
      TopicArn: !Ref UrgentMessagesTopic
      Message: !Ref MessageBody
  LongUrgentMessage:
    Type: Custom::Message
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${BaselineStackName}-MessageFunctionArn
      TopicArn: !Ref UrgentMessagesTopic
      Subject: !Ref MessageSubject
      Message: !Ref MessageBody
Outputs:
  MessagesTopic:
    Description: The Messages Topic ARN
    Value: !Ref MessagesTopic
    Export:
      Name: !Sub ${AWS::StackName}-MessagesTopic
  UrgentMessagesTopic:
    Description: The UrgentMessages Topic ARN
    Value: !Ref UrgentMessagesTopic
    Export:
      Name: !Sub ${AWS::StackName}-UrgentMessagesTopic
