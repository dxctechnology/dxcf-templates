AWSTemplateFormatVersion: 2010-09-09
Description: Core-VPCPeeringConnections Template.
  This template creates all VPCPeeringConnections.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - CoreVPCStackName
          - BuildVPCStackName
          - ProductionVPCStackName
          - StagingVPCStackName
          - UATVPCStackName
          - TestingVPCStackName
          - DevelopmentVPCStackName
    ParameterLabels:
      CoreVPCStackName:
        default: Core VPC Stack Name
      BuildVPCStackName:
        default: Build VPC Stack Name
      ProductionVPCStackName:
        default: Production VPC Stack Name
      StagingVPCStackName:
        default: Staging VPC Stack Name
      UATVPCStackName:
        default: UAT VPC Stack Name
      TestingVPCStackName:
        default: Testing VPC Stack Name
      DevelopmentVPCStackName:
        default: Development VPC Stack Name
Parameters:
  CoreVPCStackName:
    Description: Name of the CloudFormation Stack containing the Core VPC
    Type: String
    MinLength: 8
    MaxLength: 64
    Default: Core-VPC
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  BuildVPCStackName:
    Description: Name of the CloudFormation Stack containing the Build VPC
    Type: String
    MaxLength: 64
    Default: ''
    AllowedPattern: (^$|^[A-Z][-a-zA-Z0-9]*$)
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  ProductionVPCStackName:
    Description: Name of the CloudFormation Stack containing the Production VPC
    Type: String
    MaxLength: 64
    Default: ''
    AllowedPattern: (^$|^[A-Z][-a-zA-Z0-9]*$)
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  StagingVPCStackName:
    Description: Name of the CloudFormation Stack containing the Staging VPC
    Type: String
    MaxLength: 64
    Default: ''
    AllowedPattern: (^$|^[A-Z][-a-zA-Z0-9]*$)
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  UATVPCStackName:
    Description: Name of the CloudFormation Stack containing the UAT VPC
    Type: String
    MaxLength: 64
    Default: ''
    AllowedPattern: (^$|^[A-Z][-a-zA-Z0-9]*$)
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  TestingVPCStackName:
    Description: Name of the CloudFormation Stack containing the Testing VPC
    Type: String
    MaxLength: 64
    Default: ''
    AllowedPattern: (^$|^[A-Z][-a-zA-Z0-9]*$)
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  DevelopmentVPCStackName:
    Description: Name of the CloudFormation Stack containing the Development VPC
    Type: String
    MaxLength: 64
    Default: ''
    AllowedPattern: (^$|^[A-Z][-a-zA-Z0-9]*$)
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
Conditions:
  PeerToBuildVPC: !Not [ !Equals [ !Ref BuildVPCStackName, '' ]]
  PeerToProductionVPC: !Not [ !Equals [ !Ref ProductionVPCStackName, '' ]]
  PeerToStagingVPC: !Not [ !Equals [ !Ref StagingVPCStackName, '' ]]
  PeerToUATVPC: !Not [ !Equals [ !Ref UATVPCStackName, '' ]]
  PeerToTestingVPC: !Not [ !Equals [ !Ref TestingVPCStackName, '' ]]
  PeerToDevelopmentVPC: !Not [ !Equals [ !Ref DevelopmentVPCStackName, '' ]]
Resources:
  BuildVPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPC
      PeerVpcId: !ImportValue
        Fn::Sub: ${BuildVPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub Core-BuildVPCPeeringConnection
    Condition: PeerToBuildVPC
  PublicCoreToBuildRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${BuildVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref BuildVPCPeeringConnection
    Condition: PeerToBuildVPC
  PublicBuildToCoreRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${BuildVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref BuildVPCPeeringConnection
    Condition: PeerToBuildVPC
  PrivateCoreToBuildRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${BuildVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref BuildVPCPeeringConnection
    Condition: PeerToBuildVPC
  PrivateBuildToCoreRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${BuildVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref BuildVPCPeeringConnection
    Condition: PeerToBuildVPC
  PrivateCoreToBuildRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${BuildVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref BuildVPCPeeringConnection
    Condition: PeerToBuildVPC
  PrivateBuildToCoreRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${BuildVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref BuildVPCPeeringConnection
    Condition: PeerToBuildVPC
  ProductionVPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPC
      PeerVpcId: !ImportValue
        Fn::Sub: ${ProductionVPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub Core-ProductionVPCPeeringConnection
    Condition: PeerToProductionVPC
  PublicCoreToProductionRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${ProductionVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref ProductionVPCPeeringConnection
    Condition: PeerToProductionVPC
  PublicProductionToCoreRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${ProductionVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref ProductionVPCPeeringConnection
    Condition: PeerToProductionVPC
  PrivateCoreToProductionRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${ProductionVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref ProductionVPCPeeringConnection
    Condition: PeerToProductionVPC
  PrivateProductionToCoreRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${ProductionVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref ProductionVPCPeeringConnection
    Condition: PeerToProductionVPC
  PrivateCoreToProductionRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${ProductionVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref ProductionVPCPeeringConnection
    Condition: PeerToProductionVPC
  PrivateProductionToCoreRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${ProductionVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref ProductionVPCPeeringConnection
    Condition: PeerToProductionVPC
  StagingVPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPC
      PeerVpcId: !ImportValue
        Fn::Sub: ${StagingVPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub Core-StagingVPCPeeringConnection
    Condition: PeerToStagingVPC
  PublicCoreToStagingRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${StagingVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref StagingVPCPeeringConnection
    Condition: PeerToStagingVPC
  PublicStagingToCoreRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${StagingVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref StagingVPCPeeringConnection
    Condition: PeerToStagingVPC
  PrivateCoreToStagingRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${StagingVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref StagingVPCPeeringConnection
    Condition: PeerToStagingVPC
  PrivateStagingToCoreRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${StagingVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref StagingVPCPeeringConnection
    Condition: PeerToStagingVPC
  PrivateCoreToStagingRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${StagingVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref StagingVPCPeeringConnection
    Condition: PeerToStagingVPC
  PrivateStagingToCoreRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${StagingVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref StagingVPCPeeringConnection
    Condition: PeerToStagingVPC
  UATVPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPC
      PeerVpcId: !ImportValue
        Fn::Sub: ${UATVPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub Core-UATVPCPeeringConnection
    Condition: PeerToUATVPC
  PublicCoreToUATRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${UATVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref UATVPCPeeringConnection
    Condition: PeerToUATVPC
  PublicUATToCoreRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${UATVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref UATVPCPeeringConnection
    Condition: PeerToUATVPC
  PrivateCoreToUATRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${UATVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref UATVPCPeeringConnection
    Condition: PeerToUATVPC
  PrivateUATToCoreRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${UATVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref UATVPCPeeringConnection
    Condition: PeerToUATVPC
  PrivateCoreToUATRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${UATVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref UATVPCPeeringConnection
    Condition: PeerToUATVPC
  PrivateUATToCoreRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${UATVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref UATVPCPeeringConnection
    Condition: PeerToUATVPC
  TestingVPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPC
      PeerVpcId: !ImportValue
        Fn::Sub: ${TestingVPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub Core-TestingVPCPeeringConnection
    Condition: PeerToTestingVPC
  PublicCoreToTestingRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${TestingVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref TestingVPCPeeringConnection
    Condition: PeerToTestingVPC
  PublicTestingToCoreRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${TestingVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref TestingVPCPeeringConnection
    Condition: PeerToTestingVPC
  PrivateCoreToTestingRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${TestingVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref TestingVPCPeeringConnection
    Condition: PeerToTestingVPC
  PrivateTestingToCoreRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${TestingVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref TestingVPCPeeringConnection
    Condition: PeerToTestingVPC
  PrivateCoreToTestingRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${TestingVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref TestingVPCPeeringConnection
    Condition: PeerToTestingVPC
  PrivateTestingToCoreRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${TestingVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref TestingVPCPeeringConnection
    Condition: PeerToTestingVPC
  DevelopmentVPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPC
      PeerVpcId: !ImportValue
        Fn::Sub: ${DevelopmentVPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub Core-DevelopmentVPCPeeringConnection
    Condition: PeerToDevelopmentVPC
  PublicCoreToDevelopmentRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${DevelopmentVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref DevelopmentVPCPeeringConnection
    Condition: PeerToDevelopmentVPC
  PublicDevelopmentToCoreRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${DevelopmentVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref DevelopmentVPCPeeringConnection
    Condition: PeerToDevelopmentVPC
  PrivateCoreToDevelopmentRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${DevelopmentVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref DevelopmentVPCPeeringConnection
    Condition: PeerToDevelopmentVPC
  PrivateDevelopmentToCoreRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${DevelopmentVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref DevelopmentVPCPeeringConnection
    Condition: PeerToDevelopmentVPC
  PrivateCoreToDevelopmentRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${DevelopmentVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref DevelopmentVPCPeeringConnection
    Condition: PeerToDevelopmentVPC
  PrivateDevelopmentToCoreRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${CoreVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${DevelopmentVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref DevelopmentVPCPeeringConnection
    Condition: PeerToDevelopmentVPC
