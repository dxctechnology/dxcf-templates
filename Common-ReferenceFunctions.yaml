AWSTemplateFormatVersion: 2010-09-09
Description: Common-ReferenceFunctions Template.
  This creates Lambda Functions which implement References to various types of Resources which may exist in different
  Regions and/or Accounts.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - LayersStackName
          - BucketsStackName
          - TopicsStackName
      - Label:
          default: Function Configuration
        Parameters:
          - RoleReferenceFunctionKey
          - RoleReferenceFunctionObjectVersion
          - RoleReferenceLogRetention
          - VpcReferenceFunctionKey
          - VpcReferenceFunctionObjectVersion
          - VpcReferenceLogRetention
          - SubnetReferenceGroupFunctionKey
          - SubnetReferenceFunctionObjectVersion
          - SubnetReferenceLogRetention
          - SecurityGroupReferenceFunctionKey
          - SecurityGroupReferenceFunctionObjectVersion
          - SecurityGroupReferenceLogRetention
          - StackExportReferenceFunctionKey
          - StackExportReferenceFunctionObjectVersion
          - StackExportReferenceLogRetention
          - StackExportsReferenceFunctionKey
          - StackExportsReferenceFunctionObjectVersion
          - StackExportsReferenceLogRetention
    ParameterLabels:
      LayersStackName:
        default: Layers Stack Name
      BucketsStackName:
        default: Buckets Stack Name
      TopicsStackName:
        default: Topics Stack Name
      RoleReferenceFunctionKey:
        default: RoleReference Function S3 Key
      RoleReferenceFunctionObjectVersion:
        default: RoleReference Function S3 Object Version
      RoleReferenceLogRetention:
        default: RoleReference Log Retention
      VpcReferenceFunctionKey:
        default: VpcReference Function S3 Key
      VpcReferenceFunctionObjectVersion:
        default: VpcReference Function S3 Object Version
      VpcReferenceLogRetention:
        default: VpcReference Log Retention
      SubnetReferenceFunctionKey:
        default: SubnetReference Function S3 Key
      SubnetReferenceFunctionObjectVersion:
        default: SubnetReference Function S3 Object Version
      SubnetReferenceLogRetention:
        default: SubnetReference Log Retention
      SecurityGroupReferenceFunctionKey:
        default: SecurityGroupReference Function S3 Key
      SecurityGroupReferenceFunctionObjectVersion:
        default: SecurityGroupReference Function S3 Object Version
      SecurityGroupReferenceLogRetention:
        default: SecurityGroupReference Log Retention
      StackExportReferenceFunctionKey:
        default: StackExportReference Function S3 Key
      StackExportReferenceFunctionObjectVersion:
        default: StackExportReference Function S3 Object Version
      StackExportReferenceLogRetention:
        default: StackExportReference Log Retention
      StackExportsReferenceFunctionKey:
        default: StackExportsReference Function S3 Key
      StackExportsReferenceFunctionObjectVersion:
        default: StackExportsReference Function S3 Object Version
      StackExportsReferenceLogRetention:
        default: StackExportsReference Log Retention
Parameters:
  LayersStackName:
    Description: Name of the CloudFormation Stack containing Layers
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Layers
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  BucketsStackName:
    Description: Name of the CloudFormation Stack containing Buckets
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Buckets
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  TopicsStackName:
    Description: Name of the CloudFormation Stack containing Topics
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Topics
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  RoleReferenceFunctionKey:
    Description: Key of Object within the S3 Bucket containing the RoleReference Lambda Function zipfile
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: RoleReference.zip
    AllowedPattern: ^[-_.a-zA-Z0-9]*\.zip$
    ConstraintDescription: must be a valid zipfilename, not containing slashes.
  RoleReferenceFunctionObjectVersion:
    Description: Version of Object within the S3 Bucket containing the RoleReference Lambda Function zipfile
    Type: String
    MaxLength: 32
    Default: ''
    ConstraintDescription: must be a valid S3 Object Version.
  RoleReferenceLogRetention:
    Description: Number of days to retain CloudWatch Log Events for the RoleReference Lambda Function
    Type: Number
    Default: 30
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
    ConstraintDescription: must be 1, 3, 5, 7, 14, 30, 60 or 90.
  VpcReferenceFunctionKey:
    Description: Key of Object within the S3 Bucket containing the VpcReference Lambda Function zipfile
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: VpcReference.zip
    AllowedPattern: ^[-_.a-zA-Z0-9]*\.zip$
    ConstraintDescription: must be a valid zipfilename, not containing slashes.
  VpcReferenceFunctionObjectVersion:
    Description: Version of Object within the S3 Bucket containing the VpcReference Lambda Function zipfile
    Type: String
    MaxLength: 32
    Default: ''
    ConstraintDescription: must be a valid S3 Object Version.
  VpcReferenceLogRetention:
    Description: Number of days to retain CloudWatch Log Events for the VpcReference Lambda Function
    Type: Number
    Default: 30
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
    ConstraintDescription: must be 1, 3, 5, 7, 14, 30, 60 or 90.
  SubnetReferenceFunctionKey:
    Description: Key of Object within the S3 Bucket containing the SubnetReference Lambda Function zipfile
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: SubnetReference.zip
    AllowedPattern: ^[-_.a-zA-Z0-9]*\.zip$
    ConstraintDescription: must be a valid zipfilename, not containing slashes.
  SubnetReferenceFunctionObjectVersion:
    Description: Version of Object within the S3 Bucket containing the SubnetReference Lambda Function zipfile
    Type: String
    MaxLength: 32
    Default: ''
    ConstraintDescription: must be a valid S3 Object Version.
  SubnetReferenceLogRetention:
    Description: Number of days to retain CloudWatch Log Events for the SubnetReference Lambda Function
    Type: Number
    Default: 30
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
    ConstraintDescription: must be 1, 3, 5, 7, 14, 30, 60 or 90.
  SecurityGroupReferenceFunctionKey:
    Description: Key of Object within the S3 Bucket containing the SecurityGroupReference Lambda Function zipfile
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: SecurityGroupReference.zip
    AllowedPattern: ^[-_.a-zA-Z0-9]*\.zip$
    ConstraintDescription: must be a valid zipfilename, not containing slashes.
  SecurityGroupReferenceFunctionObjectVersion:
    Description: Version of Object within the S3 Bucket containing the SecurityGroupReference Lambda Function zipfile
    Type: String
    MaxLength: 32
    Default: ''
    ConstraintDescription: must be a valid S3 Object Version.
  SecurityGroupReferenceLogRetention:
    Description: Number of days to retain CloudWatch Log Events for the SecurityGroupReference Lambda Function
    Type: Number
    Default: 30
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
    ConstraintDescription: must be 1, 3, 5, 7, 14, 30, 60 or 90.
  StackExportReferenceFunctionKey:
    Description: Key of Object within the S3 Bucket containing the StackExportReference Lambda Function zipfile
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: StackExportReference.zip
    AllowedPattern: ^[-_.a-zA-Z0-9]*\.zip$
    ConstraintDescription: must be a valid zipfilename, not containing slashes.
  StackExportReferenceFunctionObjectVersion:
    Description: Version of Object within the S3 Bucket containing the StackExportReference Lambda Function zipfile
    Type: String
    MaxLength: 32
    Default: ''
    ConstraintDescription: must be a valid S3 Object Version.
  StackExportReferenceLogRetention:
    Description: Number of days to retain CloudWatch Log Events for the StackExportReference Lambda Function
    Type: Number
    Default: 30
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
    ConstraintDescription: must be 1, 3, 5, 7, 14, 30, 60 or 90.
  StackExportsReferenceFunctionKey:
    Description: Key of Object within the S3 Bucket containing the StackExportsReference Lambda Function zipfile
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: StackExportsReference.zip
    AllowedPattern: ^[-_.a-zA-Z0-9]*\.zip$
    ConstraintDescription: must be a valid zipfilename, not containing slashes.
  StackExportsReferenceFunctionObjectVersion:
    Description: Version of Object within the S3 Bucket containing the StackExportsReference Lambda Function zipfile
    Type: String
    MaxLength: 32
    Default: ''
    ConstraintDescription: must be a valid S3 Object Version.
  StackExportsReferenceLogRetention:
    Description: Number of days to retain CloudWatch Log Events for the StackExportsReference Lambda Function
    Type: Number
    Default: 30
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
    ConstraintDescription: must be 1, 3, 5, 7, 14, 30, 60 or 90.
Conditions:
  ConfigureRoleReferenceFunctionObjectVersion: !Not [ !Equals [ !Ref RoleReferenceFunctionObjectVersion, '' ]]
  ConfigureVpcReferenceFunctionObjectVersion: !Not [ !Equals [ !Ref VpcReferenceFunctionObjectVersion, '' ]]
  ConfigureSubnetReferenceFunctionObjectVersion: !Not [ !Equals [ !Ref SubnetReferenceFunctionObjectVersion, '' ]]
  ConfigureSecurityGroupReferenceFunctionObjectVersion: !Not [ !Equals [ !Ref SecurityGroupReferenceFunctionObjectVersion, '' ]]
  ConfigureStackExportReferenceFunctionObjectVersion: !Not [ !Equals [ !Ref StackExportReferenceFunctionObjectVersion, '' ]]
  ConfigureStackExportsReferenceFunctionObjectVersion: !Not [ !Equals [ !Ref StackExportsReferenceFunctionObjectVersion, '' ]]
Resources:
  ReferenceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: LocalReferencePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Sid: AllowGetRole
                Effect: Allow
                Action:
                  - iam:GetRole
                Resource: '*'
              - Sid: AllowDescribeVpcs
                Effect: Allow
                Action:
                  - ec2:DescribeVpcs
                Resource: '*'
              - Sid: AllowDescribeSubnets
                Effect: Allow
                Action:
                  - ec2:DescribeSubnets
                Resource: '*'
              - Sid: AllowDescribeSecurityGroups
                Effect: Allow
                Action:
                  - ec2:DescribeSecurityGroups
                Resource: '*'
              - Sid: AllowListExports
                Effect: Allow
                Action:
                  - cloudformation:ListExports
                Resource: '*'
              - Sid: AllowDescribeStacks
                Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                Resource: '*'
              - Sid: AllowListBuckets
                Effect: Allow
                Action:
                  - s3:ListAllMyBuckets
                  - s3:GetBucketLocation
                  - s3:ListBucket
                Resource: '*'
        - PolicyName: RemoteReferencePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource:
                  - !Sub arn:aws:iam::*:role/ReferenceRole
  RoleReferenceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/RoleReference
      RetentionInDays: !Ref RoleReferenceLogRetention
  RoleReferenceFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: RoleReference
      Description: A Lambda function that returns information about an IAM Role in another Region and/or Account.
      Role: !GetAtt ReferenceRole.Arn
      Runtime: nodejs8.10
      Timeout: 30
      Layers:
        - !ImportValue
            Fn::Sub: ${LayersStackName}-AsyncCustomResourceLayerVersionArn
      Handler: RoleReference.handler
      Code:
        S3Bucket: !ImportValue
          Fn::Sub: ${BucketsStackName}-FunctionsBucket
        S3Key: !Ref RoleReferenceFunctionKey
        S3ObjectVersion: !If [ ConfigureRoleReferenceFunctionObjectVersion, !Ref RoleReferenceFunctionObjectVersion, !Ref 'AWS::NoValue' ]
    DependsOn: RoleReferenceLogGroup
  VpcReferenceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/VpcReference
      RetentionInDays: !Ref VpcReferenceLogRetention
  VpcReferenceFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: VpcReference
      Description: A Lambda function that returns information about an EC2 VPC in another Region and/or Account.
      Role: !GetAtt ReferenceRole.Arn
      Runtime: nodejs8.10
      Timeout: 30
      Layers:
        - !ImportValue
            Fn::Sub: ${LayersStackName}-AsyncCustomResourceLayerVersionArn
      Handler: VpcReference.handler
      Code:
        S3Bucket: !ImportValue
          Fn::Sub: ${BucketsStackName}-FunctionsBucket
        S3Key: !Ref VpcReferenceFunctionKey
        S3ObjectVersion: !If [ ConfigureVpcReferenceFunctionObjectVersion, !Ref VpcReferenceFunctionObjectVersion, !Ref 'AWS::NoValue' ]
    DependsOn: VpcReferenceLogGroup
  SubnetReferenceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/SubnetReference
      RetentionInDays: !Ref SubnetReferenceLogRetention
  SubnetReferenceFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SubnetReference
      Description: A Lambda function that returns information about an EC2 Subnet in another Region and/or Account.
      Role: !GetAtt ReferenceRole.Arn
      Runtime: nodejs8.10
      Timeout: 30
      Layers:
        - !ImportValue
            Fn::Sub: ${LayersStackName}-AsyncCustomResourceLayerVersionArn
      Handler: SubnetReference.handler
      Code:
        S3Bucket: !ImportValue
          Fn::Sub: ${BucketsStackName}-FunctionsBucket
        S3Key: !Ref SubnetReferenceFunctionKey
        S3ObjectVersion: !If [ ConfigureSubnetReferenceFunctionObjectVersion, !Ref SubnetReferenceFunctionObjectVersion, !Ref 'AWS::NoValue' ]
    DependsOn: SubnetReferenceLogGroup
  SecurityGroupReferenceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/SecurityGroupReference
      RetentionInDays: !Ref SecurityGroupReferenceLogRetention
  SecurityGroupReferenceFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: SecurityGroupReference
      Description: A Lambda function that returns information about an EC2 Security Group in another Region and/or Account.
      Role: !GetAtt ReferenceRole.Arn
      Runtime: nodejs8.10
      Timeout: 30
      Layers:
        - !ImportValue
            Fn::Sub: ${LayersStackName}-AsyncCustomResourceLayerVersionArn
      Handler: SecurityGroupReference.handler
      Code:
        S3Bucket: !ImportValue
          Fn::Sub: ${BucketsStackName}-FunctionsBucket
        S3Key: !Ref SecurityGroupReferenceFunctionKey
        S3ObjectVersion: !If [ ConfigureSecurityGroupReferenceFunctionObjectVersion, !Ref SecurityGroupReferenceFunctionObjectVersion, !Ref 'AWS::NoValue' ]
    DependsOn: SecurityGroupReferenceLogGroup
  StackExportReferenceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/StackExportReference
      RetentionInDays: !Ref StackExportReferenceLogRetention
  StackExportReferenceFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: StackExportReference
      Description: A Lambda function that returns the value of a single Stack Export in another Region and/or Account.
      Role: !GetAtt ReferenceRole.Arn
      Runtime: nodejs8.10
      Timeout: 30
      Layers:
        - !ImportValue
            Fn::Sub: ${LayersStackName}-AsyncCustomResourceLayerVersionArn
      Handler: StackExportReference.handler
      Code:
        S3Bucket: !ImportValue
          Fn::Sub: ${BucketsStackName}-FunctionsBucket
        S3Key: !Ref StackExportReferenceFunctionKey
        S3ObjectVersion: !If [ ConfigureStackExportReferenceFunctionObjectVersion, !Ref StackExportReferenceFunctionObjectVersion, !Ref 'AWS::NoValue' ]
    DependsOn: StackExportReferenceLogGroup
  StackExportsReferenceLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/StackExportsReference
      RetentionInDays: !Ref StackExportsReferenceLogRetention
  StackExportsReferenceFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: StackExportsReference
      Description: A Lambda function that returns the values of all Exports for a single CloudFormation Stack in another Region and/or Account.
      Role: !GetAtt ReferenceRole.Arn
      Runtime: nodejs8.10
      Timeout: 30
      Layers:
        - !ImportValue
            Fn::Sub: ${LayersStackName}-AsyncCustomResourceLayerVersionArn
      Handler: StackExportsReference.handler
      Code:
        S3Bucket: !ImportValue
          Fn::Sub: ${BucketsStackName}-FunctionsBucket
        S3Key: !Ref StackExportsReferenceFunctionKey
        S3ObjectVersion: !If [ ConfigureStackExportsReferenceFunctionObjectVersion, !Ref StackExportsReferenceFunctionObjectVersion, !Ref 'AWS::NoValue' ]
    DependsOn: StackExportsReferenceLogGroup
Outputs:
  RoleReferenceFunctionArn:
    Description: The RoleReference Lambda Function ARN
    Value: !GetAtt RoleReferenceFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-RoleReferenceFunctionArn
  VpcReferenceFunctionArn:
    Description: The VpcReference Lambda Function ARN
    Value: !GetAtt VpcReferenceFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-VpcReferenceFunctionArn
  SubnetReferenceFunctionArn:
    Description: The SubnetReference Lambda Function ARN
    Value: !GetAtt SubnetReferenceFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-SubnetReferenceFunctionArn
  SecurityGroupReferenceFunctionArn:
    Description: The SecurityGroupReference Lambda Function ARN
    Value: !GetAtt SecurityGroupReferenceFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-SecurityGroupReferenceFunctionArn
  StackExportReferenceFunctionArn:
    Description: The StackExportReference Lambda Function ARN
    Value: !GetAtt StackExportReferenceFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-StackExportReferenceFunctionArn
  StackExportsReferenceFunctionArn:
    Description: The StackExportsReference Lambda Function ARN
    Value: !GetAtt StackExportsReferenceFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-StackExportsReferenceFunctionArn
