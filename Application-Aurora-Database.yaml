AWSTemplateFormatVersion: 2010-09-09
Description: Application-Aurora-Database Template.
  This template implements an Aurora (MySQL) RDS Database and related resources.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - WindowsBastionsStackName
          - VPNStackName
          - VPCStackName
          - BucketsStackName
          - TopicsStackName
          - KeysStackName
          - CodesStackName
      - Label:
          default: System Configuration
        Parameters:
          - CompanyName
          - SystemName
      - Label:
          default: Environment Configuration
        Parameters:
          - AccountName
          - EnvironmentName
          - EnvironmentType
          - EnvironmentZones
      - Label:
          default: Aurora Application Configuration
        Parameters:
          - AuroraApplicationName
          - DatabaseComponentName
          - AuroraDatabaseServiceName
      - Label:
          default: Engine Configuration
        Parameters:
          - EngineType
          - EngineMode
          - EngineVersion
          - EncryptionType
          - BackupRetention
          - BackupWindow
          - MaintenanceWindow
          - LogRetention
      - Label:
          default: Aurora Database Configuration
        Parameters:
          - AuroraMasterUserName
          - AuroraMasterUserPassword
          - AuroraDatabaseName
      - Label:
          default: Security Configuration
        Parameters:
          - AdministratorNetworks
          - AdministratorNetworkDescriptions
    ParameterLabels:
      WindowsBastionsStackName:
        default: WindowsBastions Stack Name
      VPNStackName:
        default: VPN Stack Name
      VPCStackName:
        default: VPC Stack Name
      BucketsStackName:
        default: Buckets Stack Name
      TopicsStackName:
        default: Topics Stack Name
      KeysStackName:
        default: Keys Stack Name
      CodesStackName:
        default: Codes Stack Name
      CompanyName:
        default: Company Name
      SystemName:
        default: System Name
      AccountName:
        default: Account Name
      EnvironmentName:
        default: Environment Name
      EnvironmentType:
        default: Environment Type
      EnvironmentZones:
        default: Environment Zones
      AuroraApplicationName:
        default: Aurora Application Name
      DatabaseComponentName:
        default: Database Component Name
      AuroraDatabaseServiceName:
        default: Aurora-Database DNS Service Name
      EngineType:
        default: Engine Type
      EngineMode:
        default: Engine Mode
      EngineVersion:
        default: Engine Version
      EncryptionType:
        default: Encryption Type
      BackupRetention:
        default: Backup Retention
      BackupWindow:
        default: Backup Window
      MaintenanceWindow:
        default: Maintenance Window
      LogRetention:
        default: Log Retention
      AuroraMasterUserName:
        default: Aurora Master User Name
      AuroraMasterUserPassword:
        default: Aurora Master User Password
      AuroraDatabaseName:
        default: Aurora Database Name
      AdministratorNetworks:
        default: Administrator Networks
      AdministratorNetworkDescriptions:
        default: Administrator Network Descriptions
Parameters:
  WindowsBastionsStackName:
    Description: Name of the CloudFormation Stack containing the Windows Bastions
    Type: String
    MaxLength: 64
    Default: ''
    AllowedPattern: (^$|^[A-Z][-a-zA-Z0-9]*$)
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  VPNStackName:
    Description: Name of the CloudFormation Stack containing the VPN Instances
    Type: String
    MaxLength: 64
    Default: ''
    AllowedPattern: (^$|^[A-Z][-a-zA-Z0-9]*$)
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  VPCStackName:
    Description: Name of the CloudFormation Stack containing the VPC
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Production-VPC
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  BucketsStackName:
    Description: Name of the CloudFormation Stack containing Buckets
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Buckets
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  TopicsStackName:
    Description: Name of the CloudFormation Stack containing Topics
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Topics
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  KeysStackName:
    Description: Name of the CloudFormation Stack containing Keys
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Keys
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  CodesStackName:
    Description: Name of the CloudFormation Stack containing the Codes Resources
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Codes
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  CompanyName:
    Description: Name of the Company associated with the Stack
    Type: String
    MinLength: 2
    MaxLength: 32
    Default: DXC
    AllowedPattern: ^[A-Z][a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters.
  SystemName:
    Description: Name of the System associated with the Stack
    Type: String
    MinLength: 2
    MaxLength: 32
    Default: Prototype
    AllowedPattern: ^[A-Z][a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters.
  AccountName:
    Description: Name of the Account associated with the Stack
    Type: String
    Default: Production
    AllowedValues:
      - Production
      - Staging
      - UAT
      - QA
      - Testing
      - Development
      - Build
      - Core
      - Recovery
      - Log
      - Management
      - Jumpstart
      - Organization
    ConstraintDescription: must be Production, Staging, UAT, QA, Testing, Development, Build, Core, Recovery, Log, Management, Jumpstart or Organization.
  EnvironmentName:
    Description: Name of the Environment associated with the Stack
    Type: String
    Default: Production
    AllowedValues:
      - Production
      - Staging
      - UAT
      - QA
      - Testing
      - Development
      - Build
      - Core
      - Recovery
      - Log
      - Identity
      - Management
      - Organization
    ConstraintDescription: must be Production, Staging, UAT, QA, Testing, Development, Build, Core, Recovery, Log, Identity, Management or Organization.
  EnvironmentType:
    Description: Type of the Environment to build. Used to select size-related options in Mappings
    Type: String
    Default: small
    AllowedValues:
      - small
      - medium
      - large
      - xlarge
      - 2xlarge
      - 4xlarge
      - 8xlarge
    ConstraintDescription: must be small, medium, large, xlarge, 2xlarge, 4xlarge or 8xlarge.
  EnvironmentZones:
    Description: Number of Availability Zones to build
    Type: String
    Default: 2
    AllowedValues:
      - 1
      - 2
    ConstraintDescription: must be 1 or 2.
  AuroraApplicationName:
    Description: Name of the Aurora Application
    Type: String
    MinLength: 2
    MaxLength: 32
    Default: Aurora
    AllowedPattern: ^[A-Z][a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters.
  DatabaseComponentName:
    Description: Name of the Database Component
    Type: String
    Default: Database
    AllowedValues:
      - Database
    ConstraintDescription: must be Database.
  AuroraDatabaseServiceName:
    Description: DNS Service Name of the Aurora-Database Application Component
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: aurora-db
    AllowedPattern: ^[a-z][-a-z0-9]*$
    ConstraintDescription: must begin with a lower case letter and contain only lower case letters, numbers and dashes.
  EngineType:
    Description: Type of Database Engine
    Type: String
    Default: aurora
    AllowedValues:
      - aurora
    ConstraintDescription: must be aurora.
  EngineMode:
    Description: Mode of Database Engine
    Type: String
    Default: provisioned
    AllowedValues:
      - provisioned
      - parallelquery
      - serverless
    ConstraintDescription: must be provisioned, parallelquery or serverless.
  EngineVersion:
    Description: Version of the Database Engine
    Type: String
    Default: 5.6
    AllowedValues:
      - 5.6
    ConstraintDescription: must be 5.6.
  EncryptionType:
    Description: Type of Encryption
    Type: String
    Default: default
    AllowedValues:
      - default
      - custom
      - none
    ConstraintDescription: must be default, custom or none.
  BackupRetention:
    Description: Number of days to retain automated database backups
    Type: Number
    Default: 14
    AllowedValues:
      - 0
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 35
    ConstraintDescription: must be 0 (no backup) 1, 3, 5, 7, 14, 30 or 35.
  BackupWindow:
    Description: Optional preferred backup window
    Type: String
    Default: ''
    AllowedPattern: (?:^$|^(?:[01][0-9]|2[0-3]):[0-5][0-9]-(?:[01][0-9]|2[0-3]):[0-5][0-9]$)
    ConstraintDescription: must be in the format hh24:mi-hh24:mi, in UTC, not conflict with any maintenance window, and be at least 30 minutes, if specified.
  MaintenanceWindow:
    Description: Optional preferred maintenance window
    Type: String
    Default: ''
    AllowedPattern: (?:^$|^(?:sun|mon|tue|wed|thu|fri|sat):(?:[01][0-9]|2[0-3]):[0-5][0-9]-(?:sun|mon|tue|wed|thu|fri|sat):(?:[01][0-9]|2[0-3]):[0-5][0-9]$)
    ConstraintDescription: must be in the format ddd:hh24:mi-ddd:hh24:mi, in UTC, not conflict with any backup window, and be at least 30 minutes, if specified.
  LogRetention:
    Description: Number of days to retain CloudWatch Log Events
    Type: Number
    Default: 14
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
      - 120
      - 150
      - 180
      - 365
      - 400
      - 545
      - 731
      - 1827
      - 3653
    ConstraintDescription: must be 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827 or 3653.
  AuroraMasterUserName:
    Description: Name of the Aurora Master User
    Type: String
    MinLength: 2
    MaxLength: 63
    Default: aurora
    AllowedPattern: ^[a-z][a-z0-9]*$
    ConstraintDescription: must begin with a lower case letter and contain lower case alphanumeric characters.
  AuroraMasterUserPassword:
    Description: Optional password of the Aurora Master User (If unspecified, generate a random password)
    Type: String
    NoEcho: true
    Default: ''
    AllowedPattern: (^$|(?=^.{20,32}$)(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])^.*$)
    ConstraintDescription: must be 20 to 32 character random string format with at least one uppercase, lowercase and digit, if specified.
  AuroraDatabaseName:
    Description: Optional name of the Aurora Database
    Type: String
    MaxLength: 32
    Default: prototype
    AllowedPattern: (^$|^[-a-zA-Z0-9]*$)
    ConstraintDescription: must contain alphanumeric characters and dashes, if specified.
  AdministratorNetworks:
    Description: Networks that can administer the Application
    Type: String
    Default: -,-,-,-,-,-,-,-
    ConstraintDescription: must be a comma-separated list of 8 values, each an IP CIDR range of the form x.x.x.x/x or '-'.
  AdministratorNetworkDescriptions:
    Description: Descriptions of networks that can administer the Application
    Type: String
    Default: -,-,-,-,-,-,-,-
    ConstraintDescription: must be a comma-separated list of 8 values, each a short text description or '-'.
Mappings:
  RegionNameMap:
    us-east-1:
      Name: Virginia
      Code: ue1
    us-east-2:
      Name: Ohio
      Code: ue2
    us-west-1:
      Name: California
      Code: uw1
    us-west-2:
      Name: Oregon
      Code: uw2
    ap-east-1:
      Name: HongKong
      Code: ae1
    ap-south-1:
      Name: Mumbai
      Code: ad1
    ap-northeast-2:
      Name: Seoul
      Code: an2
    ap-southeast-1:
      Name: Singapore
      Code: as1
    ap-southeast-2:
      Name: Sydney
      Code: as2
    ap-northeast-1:
      Name: Tokyo
      Code: an1
    ca-central-1:
      Name: Canada
      Code: cc1
    eu-central-1:
      Name: Frankfurt
      Code: ec1
    eu-west-1:
      Name: Ireland
      Code: ew1
    eu-west-2:
      Name: London
      Code: ew2
    eu-west-3:
      Name: Paris
      Code: ew3
    eu-north-1:
      Name: Stockholm
      Code: en1
    me-south-1:
      Name: Bahrain
      Code: ms1
    sa-east-1:
      Name: SaoPaulo
      Code: se1
  DBInstanceClassMap:
    Database:
      small: db.t3.small
      medium: db.t3.medium
      large: db.r5.large
      xlarge: db.r5.xlarge
      2xlarge: db.r5.2xlarge
      4xlarge: db.r5.4xlarge
      8xlarge: db.r5.8xlarge
  CPUAlarmPercentMap:
    Database:
      small: 90
      medium: 80
      large: 80
      xlarge: 75
      2xlarge: 75
      4xlarge: 75
      8xlarge: 75
  MemoryAlarmBytesAvailableMap:
    Database:
      small: 256000000
      medium: 512000000
      large: 768000000
      xlarge: 1024000000
      2xlarge: 2048000000
      4xlarge: 4096000000
      8xlarge: 8192000000
Conditions:
  ConfigureAccountEnvironment: !Or [ !Not [ !Equals [ !Ref AccountName, !Ref EnvironmentName ]], !Equals [ !Ref AccountName, Jumpstart ]]
  ConfigureGlobal: !Equals [ !Ref 'AWS::Region', us-east-1 ]
  ConfigureWindowsBastionsIntegration: !Not [ !Equals [ !Ref WindowsBastionsStackName, '' ]]
  ConfigureVPNIntegration: !Not [ !Equals [ !Ref VPNStackName, '' ]]
  ConfigureMultiZone: !Not [ !Equals [ !Ref EnvironmentZones, 1 ]]
  ConfigureMasterUserPassword: !Not [ !Equals [ !Ref AuroraMasterUserPassword, '' ]]
  GenerateMasterUserPassword: !Not [ !Condition ConfigureMasterUserPassword ]
  ConfigureEncryption: !Not [ !Equals [ !Ref EncryptionType, none ]]
  ConfigureEncryptionKey: !Equals [ !Ref EncryptionType, custom ]
  ConfigureBackupWindow: !Not [ !Equals [ !Ref BackupWindow, '' ]]
  ConfigureMaintenanceWindow: !Not [ !Equals [ !Ref MaintenanceWindow, '' ]]
  ConfigureDatabase: !Not [ !Equals [ !Ref AuroraDatabaseName, '' ]]
  ConfigureAdministratorNetwork0: !Not [ !Equals [ !Select [ 0, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork1: !Not [ !Equals [ !Select [ 1, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork2: !Not [ !Equals [ !Select [ 2, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork3: !Not [ !Equals [ !Select [ 3, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork4: !Not [ !Equals [ !Select [ 4, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork5: !Not [ !Equals [ !Select [ 5, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork6: !Not [ !Equals [ !Select [ 6, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
  ConfigureAdministratorNetwork7: !Not [ !Equals [ !Select [ 7, !Split [ ',', !Ref AdministratorNetworks ]], '-' ]]
Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - monitoring.rds.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole
  MasterUserSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-MasterUser
      Description: !Sub Username and Password for the ${EnvironmentName} Environment ${AuroraApplicationName} ${DatabaseComponentName} Master User
      SecretString: !If [ ConfigureMasterUserPassword, !Sub '{"username": "${AuroraMasterUserName}", "password": "${AuroraMasterUserPassword}"}', !Ref 'AWS::NoValue' ]
      GenerateSecretString: !If
        - GenerateMasterUserPassword
        - SecretStringTemplate: !Sub '{"username": "${AuroraMasterUserName}"}'
          GenerateStringKey: password
          PasswordLength: 32
          ExcludePunctuation: true
        - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-MasterUser
  ClientSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-ClientSecurityGroup
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-ClientSecurityGroup
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-DatabaseSecurityGroup
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: !ImportValue
            Fn::Sub: ${VPCStackName}-VPCNetwork
          Description: VPC (ICMP)
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          SourceSecurityGroupId: !Ref ClientSecurityGroup
          Description: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-ClientSecurityGroup (MySQL)
        - !If
          - ConfigureWindowsBastionsIntegration
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            SourceSecurityGroupId: !ImportValue
              Fn::Sub: ${WindowsBastionsStackName}-InstanceSecurityGroup
            Description: !Sub ${WindowsBastionsStackName}-InstanceSecurityGroup (MySQL)
          - !Ref AWS::NoValue
        - !If
          - ConfigureVPNIntegration
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            SourceSecurityGroupId: !ImportValue
              Fn::Sub: ${VPNStackName}-InstanceSecurityGroup
            Description: !Sub ${VPNStackName}-InstanceSecurityGroup (MySQL)
          - !Ref AWS::NoValue
        - !If
          - ConfigureAdministratorNetwork0
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            CidrIp: !Select [ 0, !Split [ ',', !Ref AdministratorNetworks ]]
            Description: !Sub
              - ${NetworkDescription} (MySQL)
              - NetworkDescription: !Select [ 0, !Split [ ',', !Ref AdministratorNetworkDescriptions ]]
          - !Ref AWS::NoValue
        - !If
          - ConfigureAdministratorNetwork1
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            CidrIp: !Select [ 1, !Split [ ',', !Ref AdministratorNetworks ]]
            Description: !Sub
              - ${NetworkDescription} (MySQL)
              - NetworkDescription: !Select [ 1, !Split [ ',', !Ref AdministratorNetworkDescriptions ]]
          - !Ref AWS::NoValue
        - !If
          - ConfigureAdministratorNetwork2
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            CidrIp: !Select [ 2, !Split [ ',', !Ref AdministratorNetworks ]]
            Description: !Sub
              - ${NetworkDescription} (MySQL)
              - NetworkDescription: !Select [ 2, !Split [ ',', !Ref AdministratorNetworkDescriptions ]]
          - !Ref AWS::NoValue
        - !If
          - ConfigureAdministratorNetwork3
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            CidrIp: !Select [ 3, !Split [ ',', !Ref AdministratorNetworks ]]
            Description: !Sub
              - ${NetworkDescription} (MySQL)
              - NetworkDescription: !Select [ 3, !Split [ ',', !Ref AdministratorNetworkDescriptions ]]
          - !Ref AWS::NoValue
        - !If
          - ConfigureAdministratorNetwork4
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            CidrIp: !Select [ 4, !Split [ ',', !Ref AdministratorNetworks ]]
            Description: !Sub
              - ${NetworkDescription} (MySQL)
              - NetworkDescription: !Select [ 4, !Split [ ',', !Ref AdministratorNetworkDescriptions ]]
          - !Ref AWS::NoValue
        - !If
          - ConfigureAdministratorNetwork5
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            CidrIp: !Select [ 5, !Split [ ',', !Ref AdministratorNetworks ]]
            Description: !Sub
              - ${NetworkDescription} (MySQL)
              - NetworkDescription: !Select [ 5, !Split [ ',', !Ref AdministratorNetworkDescriptions ]]
          - !Ref AWS::NoValue
        - !If
          - ConfigureAdministratorNetwork6
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            CidrIp: !Select [ 6, !Split [ ',', !Ref AdministratorNetworks ]]
            Description: !Sub
              - ${NetworkDescription} (MySQL)
              - NetworkDescription: !Select [ 6, !Split [ ',', !Ref AdministratorNetworkDescriptions ]]
          - !Ref AWS::NoValue
        - !If
          - ConfigureAdministratorNetwork7
          - IpProtocol: tcp
            FromPort: 3306
            ToPort: 3306
            CidrIp: !Select [ 7, !Split [ ',', !Ref AdministratorNetworks ]]
            Description: !Sub
              - ${NetworkDescription} (MySQL)
              - NetworkDescription: !Select [ 7, !Split [ ',', !Ref AdministratorNetworkDescriptions ]]
          - !Ref AWS::NoValue
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: Global (All)
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-DatabaseSecurityGroup
  HostName:
    Type: Custom::HostName
    Properties:
      ServiceToken: !ImportValue
        Fn::Sub: ${CodesStackName}-HostNameFunctionArn
      CompanyName: !Ref CompanyName
      LocationName: !Ref AWS::Region
      EnvironmentName: !Ref EnvironmentName
      ApplicationName: !Ref AuroraApplicationName
      ComponentName: !Ref DatabaseComponentName
  ErrorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/rds/cluster/${HostName}/error
      RetentionInDays: !Ref LogRetention
  GeneralLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/rds/cluster/${HostName}/general
      RetentionInDays: !Ref LogRetention
  SlowQueryLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/rds/cluster/${HostName}/slowquery
      RetentionInDays: !Ref LogRetention
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-DBSubnetGroup
      SubnetIds:
        - !ImportValue
          Fn::Sub: ${VPCStackName}-DatabaseSubnetA
        - !ImportValue
          Fn::Sub: ${VPCStackName}-DatabaseSubnetB
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-DBSubnetGroup
  DBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-DBClusterParameterGroup
      Family: aurora5.6
      Parameters:
        time_zone: UTC
        server_audit_logs_upload: 1 # Default 0
        aws_default_logs_role: !GetAtt Role.Arn
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-DBClusterParameterGroup
  DBCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Ref HostName
      Engine: !Ref EngineType
      EngineMode: !Ref EngineMode
      EngineVersion: !Ref EngineVersion
      DBSubnetGroupName: !Ref DBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref DatabaseSecurityGroup
      DBClusterParameterGroupName: !Ref DBClusterParameterGroup
      MasterUsername: !Sub '{{resolve:secretsmanager:${MasterUserSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${MasterUserSecret}:SecretString:password}}'
      StorageEncrypted: !If [ ConfigureEncryption, true, false ]
      KmsKeyId: !If
        - ConfigureEncryptionKey
        - !ImportValue
            Fn::Sub: ${KeysStackName}-RDSAlias
        - !Ref AWS::NoValue
      PreferredBackupWindow: !If [ ConfigureBackupWindow, !Ref BackupWindow, !Ref 'AWS::NoValue' ]
      BackupRetentionPeriod: !Ref BackupRetention
      PreferredMaintenanceWindow: !If [ ConfigureMaintenanceWindow, !Ref MaintenanceWindow, !Ref 'AWS::NoValue' ]
      EnableCloudwatchLogsExports: [ error, general, slowquery ]
      DatabaseName: !If [ ConfigureDatabase, !Ref AuroraDatabaseName, !Ref 'AWS::NoValue' ]
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-DBCluster
        - Key: HostName
          Value: !Ref HostName
    DependsOn: [ ErrorLogGroup, GeneralLogGroup, SlowQueryLogGroup ]
  DBInstance01:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub ${HostName}01
      DBClusterIdentifier: !Ref DBCluster
      Engine: !Ref EngineType
      EngineVersion: !Ref EngineVersion
      DBInstanceClass: !FindInMap [ DBInstanceClassMap, Database, !Ref EnvironmentType ]
      DBSubnetGroupName: !Ref DBSubnetGroup
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt Role.Arn
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
  DBInstance02:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub ${HostName}02
      DBClusterIdentifier: !Ref DBCluster
      Engine: !Ref EngineType
      EngineVersion: !Ref EngineVersion
      DBInstanceClass: !FindInMap [ DBInstanceClassMap, Database, !Ref EnvironmentType ]
      DBSubnetGroupName: !Ref DBSubnetGroup
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt Role.Arn
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
    DependsOn: DBInstance01
    Condition: ConfigureMultiZone
  PrivateDBClusterHostNameRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue
        Fn::Sub: ${VPCStackName}-PrivateHostedZone
      Comment: !Sub Private DNS Host Name of the ${AuroraApplicationName}-${DatabaseComponentName} DBCluster Endpoint
      Name: !Sub
        - ${HostName}.${VPCPrivateDomain}.
        - VPCPrivateDomain: !ImportValue
            Fn::Sub: ${VPCStackName}-VPCPrivateDomain
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt DBCluster.Endpoint.Address
  PrivateDBClusterServiceNameRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue
        Fn::Sub: ${VPCStackName}-PrivateHostedZone
      Comment: !Sub Private DNS Service Name of the ${AuroraApplicationName}-${DatabaseComponentName} DBCluster Endpoint
      Name: !Sub
        - ${AuroraDatabaseServiceName}.${VPCPrivateDomain}.
        - VPCPrivateDomain: !ImportValue
            Fn::Sub: ${VPCStackName}-VPCPrivateDomain
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt DBCluster.Endpoint.Address
  PrivateDBInstance01HostNameRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue
        Fn::Sub: ${VPCStackName}-PrivateHostedZone
      Comment: !Sub Private DNS Host Name of the ${AuroraApplicationName}-${DatabaseComponentName} DBInstance01 Endpoint
      Name: !Sub
        - ${HostName}01.${VPCPrivateDomain}.
        - VPCPrivateDomain: !ImportValue
            Fn::Sub: ${VPCStackName}-VPCPrivateDomain
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt DBInstance01.Endpoint.Address
  PrivateDBInstance01ServiceNameRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue
        Fn::Sub: ${VPCStackName}-PrivateHostedZone
      Comment: !Sub Private DNS Service Name of the ${AuroraApplicationName}-${DatabaseComponentName} DBInstance01 Endpoint
      Name: !Sub
        - ${AuroraDatabaseServiceName}01.${VPCPrivateDomain}.
        - VPCPrivateDomain: !ImportValue
            Fn::Sub: ${VPCStackName}-VPCPrivateDomain
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt DBInstance01.Endpoint.Address
  PrivateDBInstance02HostNameRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue
        Fn::Sub: ${VPCStackName}-PrivateHostedZone
      Comment: !Sub Private DNS Host Name of the ${AuroraApplicationName}-${DatabaseComponentName} DBInstance02 Endpoint
      Name: !Sub
        - ${HostName}02.${VPCPrivateDomain}.
        - VPCPrivateDomain: !ImportValue
            Fn::Sub: ${VPCStackName}-VPCPrivateDomain
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt DBInstance02.Endpoint.Address
    Condition: ConfigureMultiZone
  PrivateDBInstance02ServiceNameRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !ImportValue
        Fn::Sub: ${VPCStackName}-PrivateHostedZone
      Comment: !Sub Private DNS Service Name of the ${AuroraApplicationName}-${DatabaseComponentName} DBInstance02 Endpoint
      Name: !Sub
        - ${AuroraDatabaseServiceName}02.${VPCPrivateDomain}.
        - VPCPrivateDomain: !ImportValue
            Fn::Sub: ${VPCStackName}-VPCPrivateDomain
      Type: CNAME
      TTL: 900
      ResourceRecords:
        - !GetAtt DBInstance02.Endpoint.Address
    Condition: ConfigureMultiZone
  CPUAlarm01:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: The average CPU Utilization is greater than 80% over 3 consecutive minutes
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      InsufficientDataActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: AWS/RDS
      MetricName: CPUUtilization
      Unit: Percent
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: !FindInMap [ CPUAlarmPercentMap, Database, !Ref EnvironmentType ]
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance01
  MemoryAlarm01:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: The freeable memory is less than 700MB over 3 consecutive minutes
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      InsufficientDataActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: AWS/RDS
      MetricName: FreeableMemory
      Unit: Bytes
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: !FindInMap [ MemoryAlarmBytesAvailableMap, Database, !Ref EnvironmentType ]
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance01
  # Look for buffer cache hit ratio, should be up to 99% - disk pages cached to disk
  # Next, look for result set cache hit ratio - cached query results, not applicable to all use-cases, don't use if the hit ratio is low, as you're wasting memory and cpu that can't be used

  # Plan for cross-region read replicas at some point. Useful for global, or DR, or migration to new customers.
  # Can have a headless second region, where the data is replicated to the data volumes, but there is no running read replica in the DR region. It comes up in minutes.
  # Typical replica lag is 10-20ms. We can also autoscale the read replicas. Use read replicas for BI/reporting
  ReplicationAlarm01:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: THe database replication latency is greater than 200ms over 3 minutes
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: AWS/RDS
      MetricName: AuroraReplicaLag
      Unit: Milliseconds
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: 200
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance01
  CPUAlarm02:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: The average CPU Utilization is greater than 80% over 3 consecutive minutes
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      InsufficientDataActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: AWS/RDS
      MetricName: CPUUtilization
      Unit: Percent
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: !FindInMap [ CPUAlarmPercentMap, Database, !Ref EnvironmentType ]
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance02
    Condition: ConfigureMultiZone
  MemoryAlarm02:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: The freeable memory is less than 700MB over 3 consecutive minutes
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      InsufficientDataActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: AWS/RDS
      MetricName: FreeableMemory
      Unit: Bytes
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: !FindInMap [ MemoryAlarmBytesAvailableMap, Database, !Ref EnvironmentType ]
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance02
    Condition: ConfigureMultiZone
  ReplicationAlarm02:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: THe database replication latency is greater than 200ms over 3 minutes
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: AWS/RDS
      MetricName: AuroraReplicaLag
      Unit: Milliseconds
      Statistic: Average
      Period: 60
      EvaluationPeriods: 3
      Threshold: 200
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: DBInstanceIdentifier
          Value: !Ref DBInstance02
    Condition: ConfigureMultiZone
  Dashboard:
    Type: AWS::CloudWatch::Dashboard
    Properties:
      DashboardName: !Sub
        - ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-${RegionName}
        - RegionName: !FindInMap [ RegionNameMap, !Ref 'AWS::Region', Name ]
      DashboardBody: !Sub |
        {
          "widgets" : [ {
            "type" : "text",
            "x" : 0,
            "y" : 0,
            "width" : 24,
            "height" : 1,
            "properties" : {
              "markdown" : "# ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}"
            }
          },
          {
            "type" : "text",
            "x" : 0,
            "y" : 1,
            "width" : 24,
            "height" : 1,
            "properties" : {
              "markdown" : "## Graphs"
            }
          },
          {
            "type" : "text",
            "x" : 0,
            "y" : 11,
            "width" : 24,
            "height" : 1,
            "properties" : {
              "markdown" : "## Alarms"
            }
          } ]
        }
Outputs:
  ClientSecurityGroup:
    Description: The Client SecurityGroup
    Value: !Ref ClientSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-ClientSecurityGroup
  DatabaseSecurityGroup:
    Description: The Database SecurityGroup
    Value: !Ref DatabaseSecurityGroup
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseSecurityGroup
  DBClusterEndpoint:
    Description: The DBCluster Endpoint
    Value: !GetAtt DBCluster.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-DBClusterEndpoint
  PrivateDBClusterHostName:
    Description: The Private DNS Host Name of the Aurora-Database DBCluster Endpoint
    Value: !Sub
      - ${HostName}.${VPCPrivateDomain}
      - VPCPrivateDomain: !ImportValue
          Fn::Sub: ${VPCStackName}-VPCPrivateDomain
    Export:
      Name: !Sub ${AWS::StackName}-PrivateDBClusterHostName
  PrivateDBClusterServiceName:
    Description: The Private DNS Service Name of the Aurora-Database DBCluster Endpoint
    Value: !Sub
      - ${AuroraDatabaseServiceName}.${VPCPrivateDomain}
      - VPCPrivateDomain: !ImportValue
          Fn::Sub: ${VPCStackName}-VPCPrivateDomain
    Export:
      Name: !Sub ${AWS::StackName}-PrivateDBClusterServiceName
  DBInstance01Endpoint:
    Description: The DBInstance01 Endpoint
    Value: !GetAtt DBInstance01.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-DBInstance01Endpoint
  PrivateDBInstance01HostName:
    Description: The Private DNS Host Name of the Aurora-Database DBInstance01 Endpoint
    Value: !Sub
      - ${HostName}01.${VPCPrivateDomain}
      - VPCPrivateDomain: !ImportValue
          Fn::Sub: ${VPCStackName}-VPCPrivateDomain
    Export:
      Name: !Sub ${AWS::StackName}-PrivateDBInstance01HostName
  PrivateDBInstance01ServiceName:
    Description: The Private DNS Service Name of the Aurora-Database DBInstance01 Endpoint
    Value: !Sub
      - ${AuroraDatabaseServiceName}01.${VPCPrivateDomain}
      - VPCPrivateDomain: !ImportValue
          Fn::Sub: ${VPCStackName}-VPCPrivateDomain
    Export:
      Name: !Sub ${AWS::StackName}-PrivateDBInstance01ServiceName
  DBInstance02Endpoint:
    Description: The DBInstance02 Endpoint
    Value: !GetAtt DBInstance02.Endpoint.Address
    Export:
      Name: !Sub ${AWS::StackName}-DBInstance02Endpoint
    Condition: ConfigureMultiZone
  PrivateDBInstance02HostName:
    Description: The Private DNS Host Name of the Aurora-Database DBInstance02 Endpoint
    Value: !Sub
      - ${HostName}02.${VPCPrivateDomain}
      - VPCPrivateDomain: !ImportValue
          Fn::Sub: ${VPCStackName}-VPCPrivateDomain
    Export:
      Name: !Sub ${AWS::StackName}-PrivateDBInstance02HostName
    Condition: ConfigureMultiZone
  PrivateDBInstance02ServiceName:
    Description: The Private DNS Service Name of the Aurora-Database DBInstance02 Endpoint
    Value: !Sub
      - ${AuroraDatabaseServiceName}02.${VPCPrivateDomain}
      - VPCPrivateDomain: !ImportValue
          Fn::Sub: ${VPCStackName}-VPCPrivateDomain
    Export:
      Name: !Sub ${AWS::StackName}-PrivateDBInstance02ServiceName
    Condition: ConfigureMultiZone
  DatabaseName:
    Description: The Database Name
    Value: !Ref AuroraDatabaseName
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseName
    Condition: ConfigureDatabase
  MasterUserSecret:
    Description: The Master User Secret Name
    Value: !Sub ${EnvironmentName}-${AuroraApplicationName}-${DatabaseComponentName}-MasterUser
    Export:
      Name: !Sub ${AWS::StackName}-MasterUserSecret
