AWSTemplateFormatVersion: 2010-09-09
Description: Identity-Groups Template.
  This creates IAM Groups. Groups should be kept in 1:1 sync with Roles, to insure IAM Users and Federated Users have the same permissions.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - ManagedPoliciesStackName
    ParameterLabels:
      ManagedPoliciesStackName:
        default: Managed Policies Stack Name
Parameters:
  ManagedPoliciesStackName:
    Description: Name of the CloudFormation Stack containing ManagedPolicies
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: ManagedPolicies
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
Rules:
  ValidateRegion:
    Assertions:
      - Assert: !Equals [ !Ref 'AWS::Region', us-east-1 ]
        AssertDescription: This Template can only be used in Region us-east-1.
Resources:
  AdministratorsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Administrators
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
  AdministratorsWithoutBillingGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: AdministratorsWithoutBilling
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AdministratorAccess
        - !ImportValue
          Fn::Sub: ${ManagedPoliciesStackName}-BillingRestrictions
  NetworkAdministratorsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: NetworkAdministrators
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/NetworkAdministrator
  SystemAdministratorsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: SystemAdministrators
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/SystemAdministrator
  DatabaseAdministratorsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: DatabaseAdministrators
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/job-function/DatabaseAdministrator
  SecurityAdministratorsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: SecurityAdministrators
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecurityAudit
  DevelopersGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Developers
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/PowerUserAccess
        - !ImportValue
          Fn::Sub: ${ManagedPoliciesStackName}-UserSelfManagementAccess
        - !ImportValue
          Fn::Sub: ${ManagedPoliciesStackName}-UserFolderAccess
  ManagersGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Managers
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - arn:aws:iam::aws:policy/AWSSupportAccess
        - !ImportValue
          Fn::Sub: ${ManagedPoliciesStackName}-UserSelfManagementAccess
        - !ImportValue
          Fn::Sub: ${ManagedPoliciesStackName}-UserFolderAccess
  UsersGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: Users
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - !ImportValue
          Fn::Sub: ${ManagedPoliciesStackName}-UserSelfManagementAccess
        - !ImportValue
          Fn::Sub: ${ManagedPoliciesStackName}-UserFolderAccess
  BastionAdministratorsGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: BastionAdministrators
      Path: /
  BastionUsersGroup:
    Type: AWS::IAM::Group
    Properties:
      GroupName: BastionUsers
      Path: /
Outputs:
  AdministratorsGroup:
    Description: The AdministratorsGroup Name
    Value: !Ref AdministratorsGroup
    Export:
      Name: !Sub ${AWS::StackName}-AdministratorsGroup
  AdministratorsWithoutBillingGroup:
    Description: The AdministratorsWithoutBillingGroup Name
    Value: !Ref AdministratorsWithoutBillingGroup
    Export:
      Name: !Sub ${AWS::StackName}-AdministratorsWithoutBillingGroup
  NetworkAdministratorsGroup:
    Description: The NetworkAdministratorsGroup Name
    Value: !Ref NetworkAdministratorsGroup
    Export:
      Name: !Sub ${AWS::StackName}-NetworkAdministratorsGroup
  SystemAdministratorsGroup:
    Description: The SystemAdministratorsGroup Name
    Value: !Ref SystemAdministratorsGroup
    Export:
      Name: !Sub ${AWS::StackName}-SystemAdministratorsGroup
  DatabaseAdministratorsGroup:
    Description: The DatabaseAdministratorsGroup Name
    Value: !Ref DatabaseAdministratorsGroup
    Export:
      Name: !Sub ${AWS::StackName}-DatabaseAdministratorsGroup
  SecurityAdministratorsGroup:
    Description: The SecurityAdministratorsGroup Name
    Value: !Ref SecurityAdministratorsGroup
    Export:
      Name: !Sub ${AWS::StackName}-SecurityAdministratorsGroup
  DevelopersGroup:
    Description: The DevelopersGroup Name
    Value: !Ref DevelopersGroup
    Export:
      Name: !Sub ${AWS::StackName}-DevelopersGroup
  ManagersGroup:
    Description: The ManagersGroup Name
    Value: !Ref ManagersGroup
    Export:
      Name: !Sub ${AWS::StackName}-ManagersGroup
  UsersGroup:
    Description: The UsersGroup Name
    Value: !Ref UsersGroup
    Export:
      Name: !Sub ${AWS::StackName}-UsersGroup
  BastionAdministratorsGroup:
    Description: The BastionAdministratorsGroup Name
    Value: !Ref BastionAdministratorsGroup
    Export:
      Name: !Sub ${AWS::StackName}-BastionAdministratorsGroup
  BastionUsersGroup:
    Description: The BastionUsersGroup Name
    Value: !Ref BastionUsersGroup
    Export:
      Name: !Sub ${AWS::StackName}-BastionUsersGroup
