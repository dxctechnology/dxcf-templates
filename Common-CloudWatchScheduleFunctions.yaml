AWSTemplateFormatVersion: 2010-09-09
Description: Common-CloudWatchScheduleFunctions Template.
  This creates CloudWatch Event driven Lambda Functions.
  Initially, this contains only a function intended to start and stop Instances on a schedule to reduce costs. This
  is a placeholder example, still in Python, that isn't designed very well, but has the right idea. I am leaving this
  here as a reminder we likely need something like this in the future, and will rewrite this in Node.js with a better
  design when I can get to it.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - LayersStackName
          - BucketsStackName
          - TopicsStackName
      - Label:
          default: Function Configuration
        Parameters:
          - SchedulerFunctionKey
          - SchedulerFunctionObjectVersion
          - SchedulerLogRetention
          - SchedulerSetTag
          - SchedulerSetTest
    ParameterLabels:
      LayersStackName:
        default: Layers Stack Name
      BucketsStackName:
        default: Buckets Stack Name
      TopicsStackName:
        default: Topics Stack Name
      SchedulerFunctionKey:
        default: Scheduler Function S3 Key
      SchedulerFunctionObjectVersion:
        default: Scheduler Function S3 Object Version
      SchedulerLogRetention:
        default: Scheduler Log Retention
      SchedulerTag:
        default: Scheduler Tag
      SchedulerTest:
        default: Scheduler Test
Parameters:
  LayersStackName:
    Description: Name of the CloudFormation Stack containing Layers
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Layers
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  BucketsStackName:
    Description: Name of the CloudFormation Stack containing Buckets
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Buckets
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  TopicsStackName:
    Description: Name of the CloudFormation Stack containing Topics
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Topics
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  SchedulerFunctionKey:
    Description: Key of Object within the S3 Bucket containing the Scheduler Lambda Function zipfile
    Type: String
    MinLength: 2
    MaxLength: 64
    Default: Scheduler.zip
    AllowedPattern: ^[-_.a-zA-Z0-9]*\.zip$
    ConstraintDescription: must be a valid zipfilename, not containing slashes.
  SchedulerFunctionObjectVersion:
    Description: Version of Object within the S3 Bucket containing the Scheduler Lambda Function zipfile
    Type: String
    MaxLength: 32
    Default: ''
    ConstraintDescription: must be a valid S3 Object Version.
  SchedulerLogRetention:
    Description: Number of days to retain CloudWatch Log Events for the Scheduler Lambda Function
    Type: Number
    Default: 30
    AllowedValues:
      - 1
      - 3
      - 5
      - 7
      - 14
      - 30
      - 60
      - 90
    ConstraintDescription: 'must be: 1, 3, 5, 7, 14, 30, 60 or 90.'
  SchedulerTag:
    Description: Name of Tag associted with Instances containing Schedule information managed by this Function
    Type: String
    Default: Schedule
    AllowedValues:
      - Schedule
    ConstraintDescription: must be Schedule.
  SchedulerTest:
    Description: Enable Test Mode for the Scheduler Lambda Function
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    ConstraintDescription: must be either true or false.
Mappings:
  RegionNameMap:
    us-east-1:
      Name: Virginia
      Code: ue1
      TimeZone: America/New_York
    us-east-2:
      Name: Ohio
      Code: ue2
      TimeZone: America/New_York
    us-west-1:
      Name: California
      Code: uw1
      TimeZone: America/Los_Angeles
    us-west-2:
      Name: Oregon
      Code: uw2
      TimeZone: America/Los_Angeles
    ap-east-1:
      Name: HongKong
      Code: ae1
      TimeZone: Asia/Hong_Kong
    ap-south-1:
      Name: Mumbai
      Code: ad1
      TimeZone: Asia/Kolkata
    ap-northeast-2:
      Name: Seoul
      Code: an2
      TimeZone: Asia/Seoul
    ap-southeast-1:
      Name: Singapore
      Code: as1
      TimeZone: Asia/Singapore
    ap-southeast-2:
      Name: Sydney
      Code: as2
      TimeZone: Australia/Sydney
    ap-northeast-1:
      Name: Tokyo
      Code: an1
      TimeZone: Asia/Tokyo
    ca-central-1:
      Name: Canada
      Code: cc1
      TimeZone: America/Montreal
    eu-central-1:
      Name: Frankfurt
      Code: ec1
      TimeZone: Europe/Berlin
    eu-west-1:
      Name: Ireland
      Code: ew1
      TimeZone: Europe/Dublin
    eu-west-2:
      Name: London
      Code: ew2
      TimeZone: Europe/London
    eu-west-3:
      Name: Paris
      Code: ew3
      TimeZone: Europe/Paris
    eu-north-1:
      Name: Stockholm
      Code: en1
      TimeZone: Europe/Stockholm
    me-south-1:
      Name: Bahrain
      Code: ms1
      TimeZone: Asia/Bahrain
    sa-east-1:
      Name: SaoPaulo
      Code: se1
      TimeZone: America/Sao_Paulo
Conditions:
  ConfigureSchedulerFunctionObjectVersion: !Not [ !Equals [ !Ref SchedulerFunctionObjectVersion, '' ]]
Resources:
  SchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ManageInstancesPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ec2:DescribeInstances
                  - ec2:StartInstances
                  - ec2:StopInstances
                  - ec2:RebootInstances
                  - ec2:TerminateInstances
                Resource: '*'
  SchedulerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: /aws/lambda/Scheduler
      RetentionInDays: !Ref SchedulerLogRetention
  SchedulerFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: Scheduler
      Description: A Lambda function which starts, stops and/or terminates Instances based on a Schedule Tag.
      Role: !GetAtt SchedulerRole.Arn
      Runtime: nodejs10.x
      Timeout: 30
      Handler: Scheduler.handler
      Code:
        S3Bucket: !ImportValue
          Fn::Sub: ${BucketsStackName}-FunctionsBucket
        S3Key: !Ref SchedulerFunctionKey
        S3ObjectVersion: !If [ ConfigureSchedulerFunctionObjectVersion, !Ref SchedulerFunctionObjectVersion, !Ref 'AWS::NoValue' ]
      Environment:
        Variables:
          TAG: !Ref SchedulerTag
          TEST: !Ref SchedulerTest
    DependsOn: SchedulerLogGroup
  SchedulerRule:
    Type: AWS::Events::Rule
    Properties:
      Name: SchedulerRule
      Description: Rule to start and stop Instances based on a schedule expression in a Schedule tag.
      ScheduleExpression: rate(10 minutes)
      State: ENABLED
      Targets:
        - Id: SchedulerFunction
          Arn: !GetAtt SchedulerFunction.Arn
  SchedulerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SchedulerFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt SchedulerRule.Arn
  SchedulerErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: The number of ERRORs is greater than 5 over 1 minute
      AlarmActions:
        - !ImportValue
          Fn::Sub: ${TopicsStackName}-AlarmsTopic
      Namespace: AWS/Lambda
      MetricName: Errors
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
Outputs:
  SchedulerFunctionArn:
    Description: The Scheduler Lambda Function ARN
    Value: !GetAtt SchedulerFunction.Arn
    Export:
      Name: !Sub ${AWS::StackName}-SchedulerFunctionArn
