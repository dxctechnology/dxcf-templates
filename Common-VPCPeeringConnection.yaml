AWSTemplateFormatVersion: 2010-09-09
Description: Core-VPCPeeringConnection Template.
  This template creates a single VPCPeeringConnection.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Dependencies
        Parameters:
          - VPCStackName
          - PeerVPCStackName
    ParameterLabels:
      VPCStackName:
        default: VPC Stack Name
      PeerVPCStackName:
        default: Peer VPC Stack Name
Parameters:
  VPCStackName:
    Description: Name of the CloudFormation Stack containing a VPC
    Type: String
    MinLength: 6
    MaxLength: 64
    Default: Production-VPC
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
  PeerVPCStackName:
    Description: Name of the CloudFormation Stack containing a VPC with which to peer
    Type: String
    MinLength: 6
    MaxLength: 64
    Default: Staging-VPC
    AllowedPattern: ^[A-Z][-a-zA-Z0-9]*$
    ConstraintDescription: must begin with an upper case letter and contain alphanumeric characters and dashes.
Resources:
  VPCPeeringConnection:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !ImportValue
        Fn::Sub: ${VPCStackName}-VPC
      PeerVpcId: !ImportValue
        Fn::Sub: ${PeerVPCStackName}-VPC
      Tags:
        - Key: Name
          Value: !Sub
            - ${VPCName}-${PeerVPCName}VPCPeeringConnection
            - VPCName: !ImportValue
                Fn::Sub: ${VPCStackName}-VPCName
              PeerVPCName: !ImportValue
                Fn::Sub: ${PeerVPCStackName}-VPCName
  PublicToPeerRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${PeerVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${VPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref VPCPeeringConnection
  PublicFromPeerRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${VPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${PeerVPCStackName}-PublicRouteTable
      VpcPeeringConnectionId: !Ref VPCPeeringConnection
  PrivateToPeerRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${PeerVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${VPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref VPCPeeringConnection
  PrivateFromPeerRouteA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${VPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${PeerVPCStackName}-PrivateRouteTableA
      VpcPeeringConnectionId: !Ref VPCPeeringConnection
  PrivateToPeerRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${PeerVPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${VPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref VPCPeeringConnection
  PrivateFromPeerRouteB:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: !ImportValue
        Fn::Sub: ${VPCStackName}-VPCNetwork
      RouteTableId: !ImportValue
        Fn::Sub: ${PeerVPCStackName}-PrivateRouteTableB
      VpcPeeringConnectionId: !Ref VPCPeeringConnection
